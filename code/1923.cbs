''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' $Header: /fchoice/product/merge/1923.cbs 1     12/12/03 2:44p Marty $
'
' Product        :  Contact/Site Merge
'
' Name           :  1923.cbs
'
' Description    :  Allows a user to marks parts as 'master' parts having
'                   one or more alias (or duplicate) parts. Parts marked as
'                   such will be later processed using the merge.sh tool.
'
'                   Form Event Handlers:
'
'                   form_load() - form has been loaded
'                   message() - message handler
'
'                   clMasterList_Click() - Master part has been selected
'                   cmdMasterShow() - Show master part has been clicked
'                   cmdMasterDelete() - Unmark master part has been clicked
'
'                   clAliasList_Click() - Alias part has been selected
'                   cmdAliasShow() - Show alias part has been clicked
'                   cmdAliasDelete() - Unmark alias part has been clicked
'
'                   clCandidateList_Click() - Candidate part has been  selected
'                   cmdCandidateList_Click() - Refresh candidate list has been clicked
'                   cmdCandidateShow_Click() - Show candidate part has been clicked
'                   cmdMasterAdd_Click() - Mark candidate as Master has been clicked
'                   cmdAliasAdd_Click() - Mark candidate as Alias has been clicked
'                   cmdSave_Click() - Save master/alias configuration
'                   DONE_Click() - Dismiss master/alias form
'
'                   Internal Routines:
'
'                   LoadAll() - Initialize form with current master/alias configuration
'                   LoadAliasList() - Load aliases into alias list for a given master
'                   LoadMasterList() - Load masters into master list
'                   LoadCandidateList() - Load candidates into candidate list
'
'                   DeleteMaster() - Unmark specified master and associated aliases
'                   DeleteAlias() - Unmark specified alias
'                   DeleteMasterAlias() - Remove master/alias from master/alias list
'
'                   UpdateRecord() - Update a record in bulkSave
'                   RelateRecords() - Relate two records in bulkSave
'                   UnRelateRecords() - UnRelate two records in bulkSave
'
'                   SetGuiState() - Enable/Disable form controls
'                   FindFirstIndex() - Find record in list by field name/value
'
'
' Author          : First Choice Software, Inc.
'                   8900 Business Park Drive
'                   Austin, TX 78759
'                   (512) 418-2905
'
' Platforms       : This version supports Clarify 4.5 and later
'
' Copyright (C)  2003 First Choice Software, Inc.
' All Rights Reserved
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Constants
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Module data types
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Module forward declarations
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Declare Sub LoadAll(objidPart As Long)
Declare Sub LoadCandidateList(objidPart As Long)
Declare Sub LoadMasterList(objidMaster As Long, objidAlias As Long)
Declare Sub LoadAliasList(objidMaster As Long, objidAlias As Long)

Declare Sub MergeMaster(bMerge As Boolean)
Declare Sub MergeAll(bMerge As Boolean)
Declare Sub Merge(objidMaster As Long, bMerge As Boolean)

Declare Sub ShowPart(cl As Control)
Declare Sub DeleteMaster(recMaster As Record, bDelMasterAlias As Boolean)
Declare Sub DeleteAlias(recMaster As Record, recAlias As Record)
Declare Sub DeleteMasterAlias(objid As Long)
Declare Sub UpdateRecord (rec As Record)
Declare Sub RelateRecords (rec As Record, rec2 As Record, strRel As String)
Declare Sub UnRelateRecords (rec As Record, rec2 As Record, strRel As String)
Declare Sub SetGuiState(strState As String)
Declare Function FindFirstIndex(lst As List, value As Variant, strField As String) As Long

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' External forward declarations
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'
' merge.cbs
'
Declare Sub PartMergeGUI(objidMaster As Long, bMerge As Boolean, strLogFile As String)
Declare Function MergeConfigItem(strItem As String) As String

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Module globals
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Dim gBulkSav As BulkSave
Dim gbPrivMerge As Boolean
Dim gbPrivMergeAll As Boolean
Dim gbPrivPreview As Boolean
Dim gbPrivPreviewAll As Boolean
Dim gbPrivSave As Boolean
Dim gbPrivSwap As Boolean
Dim gUpdate    As Record

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Form Load Method
' * initialize contextual objects
' * set inital gui state
' * allocate initial bulkSave
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub Form_Load()
  Dim bulkRet        As New BulkRetrieve
  Dim lstControl     As List
  Dim recControl     As Record
  Dim i              As Integer

  Dim lstMaster      As New List
  Dim lstAlias       As New List
  Dim lstCandidate   As New List
  Dim lstMasterAlias As New List
  Dim recFilter      As New Record

  Me.DoDefault

  Set lstMaster.itemType = "Record"
  Set lstAlias.itemType = "Record"
  Set lstCandidate.itemType = "Record"
  Set lstMasterAlias.itemType = "Record"
  Set recFilter.recordType = "part_num"

  Cobj_MasterList.Fill lstMaster
  Cobj_AliasList.Fill lstAlias
  Cobj_CandidateList.Fill lstCandidate
  Cobj_MasterAliasList.Fill lstMasterAlias
  Cobj_CandidateFilter.Fill recFilter

  '
  ' Check priv class. The buttons honored for priv class are:
  ' * cmdMerge, cmdMergeAll, cmdPreview, cmdPreviewAll, cmdSave
  '
  ' Note: this check does not take into account
  ' the user's resource config. Should there have multiple versions
  ' of 1922, and the admin disables 'cmdMerge' for one user version,
  ' but not another, 'cmdMerge' will be disabled regardless of the
  ' 1922 user version specified in the user's resource config. This
  ' should not be an issue for normal product usage.
  '
  gbPrivMerge = True
  gbPrivMergeAll = True
  gbPrivPreview = True
  gbPrivPreviewAll = True
  gbPrivSave = True
  gbPrivSwap = True
  bulkRet.SimpleQuery 0, "user"
  bulkRet.AppendFilter 0, "objid", cbEqual, app.userObjid
  bulkRet.TraverseFromParent 1, "user_access2privclass", 0
  bulkRet.TraverseFromParent 2, "privclass2control_db", 1
  bulkRet.AppendFilter 2, "win_id", cbEqual, 1923
  bulkRet.RetrieveRecords

  Set lstControl = bulkRet.GetRecordList(2)
  For i = 0 To lstControl.Count - 1
    Set recControl = lstControl.ItemByIndex(i)
    Select Case recControl.GetField("name")
      Case "cmdMerge"
        gbPrivMerge = False
      Case "cmdMergeAll"
        gbPrivMergeAll = False
      Case "cmdPreview"
        gbPrivPreview = False
      Case "cmdPreviewAll"
        gbPrivPreviewAll = False
      Case "cmdSave"
        gbPrivSave = False
      Case "cmdSwap"
        gbPrivSwap = False
    End Select
  Next i

  SetGuiState "init"

  Set gBulkSav = New BulkSave
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Done Button Click Method
' * post confirmation dialog
' * unpost form
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub DONE_Click()
  Dim rc As Long

  If cmdSave.Enabled Then
    rc = app.msgbox("Save your changes?", cbSaveDiscardCancel, _
                      "Part Alias")
    If rc = ebCancel Then
      '
      ' User changed their mind.
      '
      Exit Sub
    End If

    If rc = 8 Then   '8=save
      '
      ' Save changes
      '
      gBulkSav.Save
    End If
  End If

  '
  ' Close form
  '
  Me.Close
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Set the Gui State
' * enable/disable command buttons based on specified state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub SetGuiState(strState As String)
  '
  ' Update status line
  '
  txtStatus.text = ""

  Select Case strState
    Case "init"
      Me.DisableControls "cmdMasterShow", "cmdMasterDelete", "cmdMerge", "cmdPreview"
      Me.DisableControls "cmdAliasShow", "cmdAliasDelete"
      Me.DisableControls "cmdCandidateShow", "cmdMasterAdd", "cmdAliasAdd"
      Me.DisableControls "cmdMergeAll", "cmdPreviewAll", "cmdSave", "cmdSwap"
      Me.EnableControls  "cmdCandidateList", "DONE"

    case "master selected"
      me.enableControls "cmdMasterShow", "cmdMasterDelete"
      cmdMerge.enabled = (not cmdSave.enabled) And (clAliasList.listCount > 0)
      cmdPreview.Enabled = cmdMerge.Enabled

      cmdMergeAll.Enabled = cmdMerge.Enabled
      cmdPreviewAll.Enabled = cmdMergeAll.Enabled

      cmdAliasAdd.Enabled = (clCandidateList.ListCount > 0)
      cmdSwap.enabled = cmdMasterShow.enabled  And cmdAliasShow.Enabled

    Case "master deselected"
      Me.DisableControls "cmdMasterShow", "cmdMasterDelete", "cmdAliasAdd", "cmdMerge", "cmdPreview", "cmdSwap"

    Case "alias selected"
      Me.EnableControls "cmdAliasShow", "cmdAliasDelete"
      cmdSwap.Enabled = cmdMasterShow.enabled  And cmdAliasShow.Enabled

    Case "alias deselected"
      Me.DisableControls "cmdAliasShow", "cmdAliasDelete", "cmdSwap"

    Case "candidate selected"
      Me.EnableControls "cmdCandidateShow", "cmdMasterAdd"
      cmdAliasAdd.Enabled = (clMasterList.ListCount > 0)

    Case "candidate deselected"
      Me.DisableControls "cmdCandidateShow", "cmdMasterAdd", "cmdAliasAdd"

    Case "savable"
      Me.EnableControls "cmdSave"
      Me.DisableControls "cmdMerge", "cmdPreview", "cmdMergeAll", "cmdPreviewAll"

    Case "not savable"
      Me.DisableControls "cmdSave"
      cmdMerge.Enabled = (clAliasList.ListCount > 0)
      cmdPreview.Enabled = cmdMerge.Enabled
      cmdMergeAll.Enabled = cmdMerge.Enabled
      cmdPreviewAll.Enabled = cmdMergeAll.Enabled

    Case Else
      'err.raise 20000, "1100 SetGuiState", "Unknown GUI state '" + strState + "'".
  End Select

  '
  ' Enforce priv class
  '
  If Not gbPrivMerge Then
    cmdMerge.Enabled = False
  End If
  If Not gbPrivMergeAll Then
    cmdMergeAll.Enabled = False
  End If
  If Not gbPrivPreview Then
    cmdPreview.Enabled = False
  End If
  if not gbPrivPreviewAll then
    cmdPreviewAll.enabled = False
  End If
  If Not gbPrivSave Then
    cmdSave.Enabled = False
  End If
  If Not gbPrivSwap Then
    cmdSwap.Enabled = False
  End If
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LoadCandidateList()
' * locate non-obsolete part_nums (masters, aliases and/or candidates)
' * filter out masters and aliases
' * attempt to locate specified candidate for auto-select
' * Fill candidate list and auto-select
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub LoadCandidateList(objidPart As Long)
  Dim lstCandidate As List
  Dim recCandidate As Record
  Dim lstMasterAlias As List
  Dim recMasterAlias As Record
  Dim i As Long
  Dim j As Long
  Dim bulkRet As New BulkRetrieve
  Dim idxSelected As Long
  Dim bFilter As Boolean
  Dim rc As Long
  Dim lstPart As List
  Dim recPart As Record

  If objidPart > 0 Then
      '
    ' Part selected from part form (or was old master). Auto-filter
    ' based on part_num/domain. This is done to reduce the size
    ' of the result set, improving performance.
    '
    bulkRet.SimpleQuery 0, "part_num"
    bulkRet.AppendFilter 0, "objid", cbEqual, objidPart
    bulkRet.RetrieveRecords

    Set lstPart = bulkRet.GetRecordList(0)
    Set recPart = lstPart.ItemByIndex(0)

    pn_filter.Text = recPart.GetField("part_number")
    dom_filter.Text = recPart.GetField("domain")
  End If

  '
  ' Locate non-obsolete parts (masters, aliases and/or candidates)
  '
  bFilter = False
  bulkRet.Clear
  bulkRet.SimpleQuery 0, "part_num"
  If CHK_INACTIVE.Value Then
     bulkRet.AppendFilter 0, "active", cbNotEqual, "Obsolete"
  Else
     bulkRet.AppendFilter 0, "active", cbEqual, "Active"
  End If
  If pn_filter.Text <> "" Then
    bulkRet.AppendFilter 0, "part_number", cbLike, pn_filter.Text + "%"
    bFilter = True
  End If
  If dom_filter.Text <> "" Then
    bulkRet.AppendFilter 0, "domain", cbLike, dom_filter.Text + "%"
    bFilter = True
  End If
  If desc_filter.Text <> "" Then
    bulkRet.AppendFilter 0, "description", cbLike, desc_filter.Text + "%"
    bFilter = True
  End If
  bulkRet.AppendSort 0, Item$(SORT.userData, 2, 2, "."), _
    Iif(ASC_DESC.Selected = "Ascending", cbAscending, cbDescending)

  If Not bFilter Then
    '
    ' No filter specified. On a tuned DB, this query can still be a dog, because
    ' the bulkRet retrieves ALL columns for all rows.
    '
    rc = App.Msgbox("It is recommended that you enter filter criteria in at least one " + _
                    "filter field to perform a List, else the resulting query could " + _
                    "take several minutes. Continue without filter?", cbYesNoCancel, _
                    "Warning")
    If rc <> ebYes Then
      Exit Sub
    End If
  End If

  bulkRet.RetrieveRecords
  Set lstCandidate = bulkRet.GetRecordList(0)

  '
  ' Filter out masters and aliases
  '
  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  For i = 0 To lstMasterAlias.Count - 1
    Set recMasterAlias = lstMasterAlias.ItemByIndex(i)
    j = 0
    Do While j < lstCandidate.Count
      Set recCandidate = lstCandidate.ItemByIndex(j)
      If recMasterAlias.GetField("objid") = recCandidate.GetField("objid") then
        lstCandidate.RemoveByIndex j
      Else
        j = j + 1
      End If
    Loop
  Next i

  '
  ' Attempt to locate specified candidate for auto-select
  '
  idxSelected = FindFirstIndex(lstCandidate, objidPart, "objid")
  If idxSelected < 0 Then
    idxSelected = 0
  End If

  '
  ' Fill candidate list and auto-select
  '
  Cobj_CandidateList.Fill lstCandidate
  If lstCandidate.Count > 0 Then
    clCandidateList.SetSelected idxSelected
    SetGuiState "candidate selected"
  Else
    SetGuiState "candidate deselected"
  End If
  Me.Refresh
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Candidate List Button Click Method
' * reload candidate list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub cmdCandidateList_Click()
  LoadCandidateList 0
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Find First Index Of Matching String
' * loop over list items until matching field value located
'
' Note: this is a replacement for CB's list.findFirstIndex which RTE's if
' specified record not found in list.
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function FindFirstIndex(lst As List, value As Variant, strField As String) As Long
  Dim rec As Record
  Dim i As Long

  For i = 0 To lst.Count - 1
    Set rec = lst.ItemByIndex(i)
    If rec.GetField(strField) = value then
      Exit For
    End If
  Next i

  FindFirstIndex = iif(i < lst.Count, i, -1)
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Show the Candidate Item Click Method
' * show part number form for this candidate
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub cmdCandidateShow_Click()
  Dim recPart As Record

  Set recPart = clCandidateList.Selected
  App.ShowPart recPart
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Add a Master Click Method
' * get part object for selected candidate
' * remove candidate from candidate list
' * add candidate to master/alias list
' * reload master list
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdMasterAdd_Click()
  Dim recMaster As Record
  Dim lstMasterAlias As List
  Dim i As Integer
  Dim recMasterAlias As Record
  Dim lstCand As List
  Dim recCand As Record

  Set recMaster = clCandidateList.Selected

  If (clCandidateList.RemoveSelected) = 0 Then
    SetGuiState "candidate deselected"
  End If

  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  recMaster.SetField "x_objid_master", 1
  lstMasterAlias.AppendItem recMaster
  LoadMasterList recMaster.GetField("objid"), 0
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Load List For Master Item
' objidMaster - auto-select this master
' objidAlias - auto-select this alias
' * locate masters in master/alias list
' * store in master list
' * auto-select first or specified master
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub LoadMasterList(objidMaster As Long, objidAlias As Long)
  Dim lstMasterAlias As List
  Dim lstMaster As New List
  Dim lstAlias As New List
  Dim recPart As Record
  Dim idxSelection As Long
  Dim i As Long

  lstMaster.itemType = "Record"
  idxSelection = -1
  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  For i = 0 To lstMasterAlias.Count - 1
    Set recPart = lstMasterAlias.ItemByIndex(i)
    If recPart.GetField("x_objid_master") = 1 Then
      lstMaster.AppendItem recPart
      If objidMaster > 0 And idxSelection < 0 And _
        recPart.GetField("objid") = objidMaster Then
        idxSelection = lstMaster.Count - 1
      End If
    End If
  Next i

  If (idxSelection < 0) Then
    idxSelection = 0
  End If

                   ' 8/2/01 MJS. Added sorting to the grid for large numbers of items
  lstMaster.Sort "part_number", 0, "domain"
  Cobj_MasterList.Fill lstMaster
  Cobj_MasterList.Refresh

  If lstMaster.count > 0 then
                   ' 8/2/01 MJS. Find proper row to highlight.
    idxSelection = lstMaster.FindFirstIndex(objidMaster, "objid")
    If (idxSelection < 0) Then
       idxSelection = 0
    End If
    clMasterList.SetSelected idxSelection
    Set recPart = lstMaster.ItemByIndex(idxSelection)
    LoadAliasList recPart.GetField("objid"), objidAlias
    SetGuiState "master selected"
  Else
    Set lstAlias.ItemType = "Record"
    Cobj_AliasList.Fill lstAlias
    Cobj_AliasList.Refresh
    SetGuiState "master deselected"
    SetGuiState "alias deselected"
  End If
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Load List of Aliases
' objidMaster - load aliases for this master
' objidAlias - auto-select this alias
' * locate aliases for specified master in master/alias list
' * store in alias list
' * auto-select first or specified alias
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub LoadAliasList(objidMaster As Long, objidAlias As Long)
  Dim lstMasterAlias As List
  Dim lstAlias As New List
  Dim recPart As Record
  Dim i As Long
  Dim idxSelected As Long

  lstAlias.itemType = "Record"

  idxSelected = -1
  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  For i = 0 To lstMasterAlias.Count - 1
    Set recPart = lstMasterAlias.itemByIndex(i)
    If recPart.GetField("x_objid_master") = objidMaster Then
      lstAlias.AppendItem recPart
      If objidAlias > 0 And idxSelected < 0 And _
        recPart.GetField("objid") = objidAlias Then
        idxSelected = lstAlias.Count - 1
      End If
    End If
  Next i

                   ' 8/2/01 MJS. Added sorting to the grid for large numbers of items
  lstAlias.Sort "part_number", 0, "domain"
  Cobj_AliasList.Fill lstAlias
  Me.Refresh

  If lstAlias.Count > 0 Then
                   ' 8/2/01 MJS. Highlight proper alias row.
    idxSelected = lstAlias.FindFirstIndex(objidAlias, "objid")
    If idxSelected < 0 Then
       idxSelected = 0
    End If
    clAliasList.SetSelected idxSelected
    SetGuiState "alias selected"
  Else
    SetGuiState "alias deselected"
  End If
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Alias Button Click Method
' * get part_num object for selected candidate
' * remove candidate from candidate list
' * add candidate to master/alias list
' * add master and alias to bulkSave and relate
' * reload alias list
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdAliasAdd_Click()
  Dim recMaster As Record
  Dim recAlias As New Record
  Dim lstMasterAlias As List
  Dim i As Integer
  Dim recMasterAlias As Record
  Dim lstCand As List
  Dim recCand As Record


  Set recAlias = clCandidateList.Selected
  Set recMaster = clMasterList.Selected

                   ' MJS 9/13/01. Enhancement. Don't allow "no alias" ones to be made aliases
  If recAlias.GetField("x_no_alias") = 1 Then
     App.MsgBox "This part number is marked as 'no alias.' You may not make it an alias."
     Exit Sub
  End If

  If (clCandidateList.RemoveSelected) = 0 Then
    SetGuiState "candidate deselected"
  End If

  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  recAlias.SetField "x_objid_master", recMaster.GetField("objid")
                   ' MJS 2/25/03 - Set the current user as the "marker"
  recAlias.SetField "x_marked_by", App.UserObjid
  lstMasterAlias.AppendItem recAlias

                   ' GMS 12/7/05 - Make sure the master record is 
                   ' marked as a master
  recMaster.SetField "x_objid_master", 1

  UpdateRecord recMaster
  UpdateRecord recAlias
  RelateRecords recAlias, recMaster, "alias2part_num"

  LoadAliasList recMaster.GetField("objid"), recAlias.GetField("objid")

  SetGuiState "savable"
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' BulkSave wrappers
' * UpdateRecord()
'   * locate existing record in bulkSave by type/objid
'   * 'update' record in bulkSave if not found
'   * 'cancel/update' record in bulkSave if found
' * RelateRecords()
' * UnRelateRecords()
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub UpdateRecord (rec As Record)
  Dim strType As String
  Dim iCount As Long
  Dim i As Long
  Dim recExist As Record

  '
  ' locate existing record in bulkSave by type/objid
  '
  strType = rec.RecordType
  iCount = gBulkSav.CountByType(strType)
  For i = 0 To iCount - 1
    Set recExist = gBulkSav.GetRecordByIndex(i, strType)
    If rec.GetField("objid") = recExist.GetField("objid") Then
      Exit For
    End If
  Next i

  If i = iCount Then
    Set gUpdate = gBulkSav.UpdateRecord(rec, cbByValue)
  Else
    gBulkSav.CancelRecord recExist
    Set gUpdate = gBulkSav.UpdateRecord(rec, cbByValue)
  End If
End Sub

Public Sub RelateRecords (rec As Record, rec2 As Record, strRel As String)
  gBulkSav.RelateRecords rec, rec2, strRel
End Sub

Public Sub UnRelateRecords (rec As Record, rec2 As Record, strRel As String)
  gBulkSav.UnrelateRecords rec, rec2, strRel
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Save Button Click Method
' * save current bulkSave
' * allocate new bulkSave
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdSave_Click()
  gBulkSav.Save
  Set gBulkSav = New BulkSave
  SetGuiState "not savable"
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Message Handler
' * 20000 - load form with current master/alias configuration
' * cbCloseMessage - close form
' * else - do default
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub Message(ulMsg As Long, strInfo As String)
  Select Case ulMsg
    Case 20000
      LoadAll Val(strInfo)

    Case cbCloseMessage
      Me.Close
      Me.DoDefault

    Case Else
      Me.DoDefault
  End Select
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Load Everything Method
' * fetch all non-obsolete parts which are masters or aliases
' * load list into master/alias list
' * load master list
' * load candidate list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub LoadAll(objidPart As Long)
  Dim lstMasterAlias As New List
  Dim lstPart As List
  Dim recPart As Record
  Dim objidMaster As Long
  Dim objidAlias As Long
  Dim bulkRet As New BulkRetrieve

  Set lstMasterAlias.ItemType = "Record"

  bulkRet.SimpleQuery 0, "part_num"
  bulkRet.appendFilter 0, "active", cbNotEqual, "Obsolete"
  bulkRet.AppendFilter 0, "x_objid_master", cbGreater, 0  '>0 is master or alias
  If objidPart <> 0 Then
    bulkRet.SimpleQuery 1, "part_num"
    bulkRet.AppendFilter 1, "objid", cbEqual, objidPart
  End If
  bulkRet.RetrieveRecords
  Set lstMasterAlias = bulkRet.GetRecordList(0)
  Cobj_MasterAliasList.Fill lstMasterAlias

  objidMaster = 0
  objidAlias = 0
  If objidPart <> 0 Then
    Set lstPart = bulkRet.GetRecordList(1)
    Set recPart = lstPart.ItemByIndex(0)
    If recPart.GetField("x_objid_master") = 1 Then
      objidMaster = objidPart
      objidAlias = 0
    Elseif recPart.GetField("x_objid_master") > 1 Then
      objidMaster = recPart.GetField("x_objid_master")
      objidAlias = objidPart
    End If
  End If

  LoadMasterList objidMaster, objidAlias
  '
  ' If no part nums selected from parent form. Do not auto-load candidate list
  ' because the resulting query can take several minutes.
  '
  If objidPart <> 0 Then
    LoadCandidateList objidPart
  End If
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Master Record Click or Double Click Methods
' * show part_num form for selected master
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdMasterShow_Click()
  ShowPart clMasterList
End Sub

Public Sub clMasterList_DblClick()
  ShowPart clMasterList
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Alias Record Click or Double Click Methods
' * show part_num form for selected alias
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdAliasShow_Click()
  ShowPart clAliasList
End Sub

Public Sub clAliasList_DblClick()
  ShowPart clAliasList
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Master Record Grid Click Method
' * load alias list for selected master
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub clMasterList_Click()
  Dim recMaster As Record

  Set recMaster = clMasterList.Selected
  LoadAliasList recMaster.GetField("objid"), 0
  SetGuiState "master selected"
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Alias Grid Click Method
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub clAliasList_Click()
  SetGuiState "alias selected"
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Show A Part Num Based On a Control
' * find part_num for selected [art (master or alias)
' * post part_num form for resulting item
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub ShowPart(cl As Control)
  Dim recPart As Record
  
  Set recPart = cl.Selected
  App.ShowPart recPart
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Remove Alias Button Click Method
' * unmark selected alias
' * unmark master if last alias unmarked
' * update gui state
' * reload candidate list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdAliasDelete_Click()
  Dim lstMasterAlias As List
  Dim recAlias As Record
  Dim recMaster As Record
  Dim i As Long

  Set recAlias = clAliasList.Selected
  DeleteAlias clMasterList.Selected, recAlias

  If (clAliasList.RemoveSelected) = 0 Then
    SetGuiState "alias deselected"

    '
    ' No more aliases for this master. Unmark master in bulkSav, but leave
    ' as master with no aliases in GUI.
    '
    DeleteMaster clMasterList.Selected, False
  End If

  SetGuiState "savable"

                   ' Removed 8/2/01 MJS. Don't refilter the candidate list. If you
                   '  want to (with first/last initials, uncomment the next line.
'  LoadCandidateList recAlias.getField("objid")
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Remove Master Item Button Click Method
' * post confirmation
' * unmark aliases for selected master
' * unmark master
' * select new master and load alias list
' * update gui state
' * update candidate list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdMasterDelete_Click()
  Dim lstAlias As List
  Dim recMaster As Record
  Dim recAlias As Record
  Dim rc As Long
  Dim objidMaster As Long

  '
  ' Fetch current master and list of aliases for this master
  '
  Set recMaster = clMasterList.Selected
  Set lstAlias = cobj_AliasList.Contents

  If lstAlias.Count > 0 Then
    rc = App.Msgbox("Unmarking this Master part will also unmark " + _
                    "its associated Alias (duplicate) parts. Continue?", cbYesNoCancel, _
                    "Unmark Master Part")
    If rc <> ebYes Then
      Exit Sub
    End If

    SetGuiState "savable"
  End If

  '
  ' Loop over aliases, removing from list and unmarking as aliases
  '
  Do While lstAlias.Count > 0
    clAliasList.SetSelected 0
    Set recAlias = clAliasList.Selected
    DeleteAlias recMaster, recAlias
    clAliasList.removeSelected
  Loop

  '
  ' Unmark as master, and remove from MasterAlias list
  '
  DeleteMaster recMaster, True
  objidMaster = recMaster.getField("objid")

  '
  ' Refresh gui
  '
  If (clMasterList.RemoveSelected) = 0 Then
    SetGuiState "master deselected"
    SetGuiState "alias deselected"
  Else
    Set recMaster = clMasterList.Selected
    LoadAliasList recMaster.GetField("objid"), 0
  End If

                   ' Removed 8/2/01 MJS. Don't refilter the candidate list. If you
                   '  want to (with first/last initials, uncomment the next line.
'  LoadCandidateList objidMaster
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Delete A Master Item
' * clear x_objid_master, x_marked_by for specified master
' * add master to bulkSave
' * remove master from master/alias list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub DeleteMaster(recMaster As Record, bDelMasterAlias As Boolean)
  Dim i As Long

  '
  ' Unmark master
  '
  recMaster.SetField "x_objid_master", 0
  recMaster.SetField "x_marked_by", 0
  UpdateRecord recMaster

  '
  ' Remove alias from MasterAlias list
  '
  If bDelMasterAlias Then
    DeleteMasterAlias recMaster.GetField("objid")
  End If
End SUb

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Delete An Alias Item
' * clear x_objid_master, x_marked_by for specified alias
' * update alias in bulk save
' * unrelate alias from specified master
' * remove alias from master/alias list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub DeleteAlias(recMaster As Record, recAlias As Record)
  Dim i As Long

  '
  ' Unrelate alias from master in bulkSave
  '
  recAlias.SetField "x_objid_master", 0
  recAlias.SetField "x_marked_by", 0
  UpdateRecord recAlias
  UnRelateRecords recAlias, recMaster, "alias2part_num"

  '
  ' Remove alias from MasterAlias list
  '
  DeleteMasterAlias recAlias.GetField("objid")
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Remove From Master/Alias List
' * locate specified part in master/alias list
' * remove part from master/alias list
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub DeleteMasterAlias(objid As Long)
  Dim lstMasterAlias As List
  Dim i As Long

  Set lstMasterAlias = Cobj_MasterAliasList.Contents
  i = FindFirstIndex(lstMasterAlias, objid, "objid")
  lstMasterAlias.RemoveByIndex i
  Cobj_MasterAliasList.Fill lstMasterAlias
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Swap Button Click Method
' * get alias and master record
' * swap them in the grids
' * fix them up in the bulksave
' * reload alias list
' * update gui state
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdSwap_Click()
  Dim recMaster As Record               ' Master record
  Dim recAlias  As Record               ' Alias record
  Dim lstAlias  As List                 ' List of aliases
  Dim iLoop     As Integer              ' Looping integer
  Dim iLoc      As Integer              ' Location integer
  Dim recTemp   As Record               ' Temporary record
  Dim lstMA     As List                 ' List of masters and aliases
  Dim rectMast  As Record               ' Temp record back from update statement
  Dim rectAl    As Record               ' Temp record back from update statement

                                        ' Get master, alias, list of aliases
                                        '  and master/aliases
  Set recMaster = clMasterList.Selected
  Set recAlias = clAliasList.Selected
  Set lstAlias = Cobj_AliasList.Contents
  Set lstMA    = Cobj_MasterAliasList.Contents

                   ' MJS 9/13/01. Enhancement. Don't allow "no alias" ones to be made aliases
  If recMaster.GetField("x_no_alias") = 1 Then
     App.MsgBox "The master part is marked as 'no alias.' You may not make it an alias."
     Exit Sub
  End If

                                        ' Loop through aliases
                                        ' Get each one and update it in the
                                        '  bulksave to point to the alias
  For iLoop = 0 To lstAlias.Count - 1
    Set recTemp = lstAlias.ItemByIndex(iLoop)

    recTemp.SetField "x_objid_master", recAlias.GetField("objid")
    UpdateRecord recTemp
    UnRelateRecords recTemp, recMaster, "alias2part_num"
    RelateRecords recTemp, recAlias, "alias2part_num"

                                        ' Update it in the list of mast/aliases
                                        '  too. Point each one to the alias
    iLoc = lstMA.FindFirstIndex(recMaster.GetField("objid"), "x_objid_master")
    Set recTemp = lstMA.ItemByIndex(iLoc)
    recTemp.SetField "x_objid_master", recAlias.GetField("objid")
    lstMA.ReplaceByIndex iLoc, recTemp
  Next iLoop

                                        ' Update the master to be an alias
                                        '  in the bulksave
                                        ' Remember new master record
  recMaster.SetField "x_objid_master", recAlias.GetField("objid")
  recMaster.SetField "x_marked_by", App.UserObjid
  UpdateRecord recMaster
  Set rectMast = gUpdate
                                        ' Update the alias to be a master
                                        '  in the bulksave
                                        ' Remember new alias record
                                        ' Clear and set the relations
  recAlias.SetField "x_objid_master", 1
  recAlias.SetField "x_marked_by", 0
  UpdateRecord recAlias
  Set rectAl = gupdate
  UnRelateRecords recAlias, recMaster, "alias2part_num"
  RelateRecords rectMast, rectAl, "alias2part_num"

                                        ' Now switch the two in the
                                        '  list of master/aliases
  iLoc = lstMA.FindFirstIndex(recMaster.GetField("objid"), "objid")
  Set recTemp = lstMA.ItemByIndex(iLoc)
  recTemp.SetField "x_objid_master", recAlias.GetField("objid")
  lstMA.ReplaceByIndex iLoc, recTemp

                                        ' When done, put back in Cobj
  iLoc = lstMA.FindFirstIndex(recAlias.GetField("objid"), "objid")
  Set recTemp = lstMA.ItemByIndex(iLoc)
  recTemp.SetField "x_objid_master", 1
  lstMA.ReplaceByIndex iLoc, recTemp
  Cobj_MasterAliasList.Fill lstMA

                                        ' Replace item in master grid
                                        ' Reload the alias grid
                                        ' Reload the master grid (8/2/01 MJS)
                                        '  We reload the grids so we can sort them
                                        '   because the swap may change the sorting
                                        ' Set the GUI state
  iLoop = clMasterList.ListIndex
  clMasterList.ReplaceItem recAlias, iLoop
  LoadMasterList recTemp.getField("objid"), 0
  LoadAliasList recAlias.getField("objid"), 0
  SetGuiState "savable"
  cmdsave.value = True
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' cmdMerge_Click()
' cmdPreview_Click()
' cmdMergeAll_Click()
' cmdPreviewAll_Click()
' MergeMaster()
' MergeAll()
' Merge()
'
' * invoke merge for selected master
' * refresh candidate, master and alias lists
'
' Copyright (C) 2003. First Choice Software. All Rights Reserved.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub cmdMerge_Click()
  MergeMaster True
End Sub

Public Sub cmdPreview_Click()
  MergeMaster False
End Sub

Public Sub cmdMergeAll_Click()
  MergeAll True
End Sub

Public Sub cmdPreviewAll_Click()
  MergeAll False
End Sub

Public Sub MergeMaster(bMerge as Boolean)
  Dim recMaster As Record
  Dim objidMaster As Long

  '
  ' Fetch selected master
  '
  set recMaster = clMasterList.selected
  objidMaster = recMaster.getField("objid")

  Merge objidMaster, bMerge
End Sub

Public Sub MergeAll(bMerge As Boolean)
  Merge 0, bMerge
End Sub

Public Sub Merge(objidMaster As Long, bMerge As Boolean)
  Dim strLogFile As String
  Dim rc As Variant

  If bMerge Then
    rc = App.Msgbox("There is no undo for this operation. Proceed?", cbYesNo, "Part Merge")
    If rc = ebNo Then
      Exit Sub
    End If
    txtStatus.Text = "Merge in progress..."
  Else
    txtStatus.Text = "Preview in progress..."
  End If
  txtStatus.Refresh

  '
  ' Perform merge on selected master
  '
  On Error Goto err_no_dir
  PartMergeGUI objidMaster, bMerge, strLogFile
  On Error Goto 0

  If bMerge Then
    '
    ' Reload candidate, master and alias lists. Remember that the master,
    ' as the result of the merge, is now a candidate again.
    '
    LoadAll objidMaster
  Else
    Dim strRawApp As String
    Dim iRawAppLen As Integer
    Dim strLeft As String
    Dim strRight As String
    Dim strApp As String
    Dim i As Integer
    Dim j As Integer

    On Error Goto err_no_viewer
    strRawApp = MergeConfigItem("FC Merge Report Viewer")
    On Error Goto 0

    iRawAppLen = Len(strRawApp)
    i = Instr(strRawApp, "%s")

    If i = 0 Then ' "notepad"
      strLeft = strRawApp
      strRight = ""
    Elseif i = 1 Then ' "%s notepad"
      strLeft = ""
      strRight = Right$(strRawApp, iRawAppLen - 2)
    Else ' "notepad %s"
      strLeft = Left$(strRawApp, i - 1)
      strRight = Right$(strRawApp, Iif((i + 2) <= iRawAppLen, i + 2, 0))
    End If
    strApp = strLeft + strLogFile + strRight

    rc = Shell(strApp, ebNormalFocus)
  End If

done_process:
  '
  ' Update status line
  '
  If bMerge Then
    txtStatus.text = "Merge complete. Log file is '" + strLogFile + "'"
  Else
    txtStatus.text = "Preview complete. Log file is '" + strLogFile + "'"
  End If
  Exit Sub

err_no_viewer:
  App.Msgbox err.description
  Resume done_process
  Exit Sub

err_no_dir:
  App.Msgbox err.description
  txtStatus.Text = ""
  Exit Sub
End Sub
